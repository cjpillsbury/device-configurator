{"version":3,"file":"mwc-drawer.js","sources":["../../node_modules/blocking-elements/dist/blocking-elements.js","../../node_modules/wicg-inert/src/inert.js","../../node_modules/@material/drawer/constants.js","../../node_modules/@material/drawer/dismissible/foundation.js","../../node_modules/@material/drawer/node_modules/@material/base/foundation.js","../../node_modules/@material/drawer/modal/foundation.js","../../node_modules/@material/mwc-drawer/node_modules/@material/mwc-base/utils.js","../../node_modules/@material/mwc-drawer/node_modules/@material/mwc-base/base-element.js","../../node_modules/@material/mwc-drawer/node_modules/@material/mwc-base/observer.js","../../node_modules/@material/mwc-drawer/mwc-drawer-base.js","../../node_modules/@material/mwc-drawer/mwc-drawer-css.js","../../node_modules/@material/mwc-drawer/mwc-drawer.js"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(() => {\n    var _a, _b, _c;\n    /* Symbols for private properties */\n    const _blockingElements = Symbol();\n    const _alreadyInertElements = Symbol();\n    const _topElParents = Symbol();\n    const _siblingsToRestore = Symbol();\n    const _parentMO = Symbol();\n    /* Symbols for private static methods */\n    const _topChanged = Symbol();\n    const _swapInertedSibling = Symbol();\n    const _inertSiblings = Symbol();\n    const _restoreInertedSiblings = Symbol();\n    const _getParents = Symbol();\n    const _getDistributedChildren = Symbol();\n    const _isInertable = Symbol();\n    const _handleMutations = Symbol();\n    class BlockingElementsImpl {\n        constructor() {\n            /**\n             * The blocking elements.\n             */\n            this[_a] = [];\n            /**\n             * Used to keep track of the parents of the top element, from the element\n             * itself up to body. When top changes, the old top might have been removed\n             * from the document, so we need to memoize the inerted parents' siblings\n             * in order to restore their inerteness when top changes.\n             */\n            this[_b] = [];\n            /**\n             * Elements that are already inert before the first blocking element is\n             * pushed.\n             */\n            this[_c] = new Set();\n        }\n        destructor() {\n            // Restore original inertness.\n            this[_restoreInertedSiblings](this[_topElParents]);\n            // Note we don't want to make these properties nullable on the class,\n            // since then we'd need non-null casts in many places. Calling a method on\n            // a BlockingElements instance after calling destructor will result in an\n            // exception.\n            const nullable = this;\n            nullable[_blockingElements] = null;\n            nullable[_topElParents] = null;\n            nullable[_alreadyInertElements] = null;\n        }\n        get top() {\n            const elems = this[_blockingElements];\n            return elems[elems.length - 1] || null;\n        }\n        push(element) {\n            if (!element || element === this.top) {\n                return;\n            }\n            // Remove it from the stack, we'll bring it to the top.\n            this.remove(element);\n            this[_topChanged](element);\n            this[_blockingElements].push(element);\n        }\n        remove(element) {\n            const i = this[_blockingElements].indexOf(element);\n            if (i === -1) {\n                return false;\n            }\n            this[_blockingElements].splice(i, 1);\n            // Top changed only if the removed element was the top element.\n            if (i === this[_blockingElements].length) {\n                this[_topChanged](this.top);\n            }\n            return true;\n        }\n        pop() {\n            const top = this.top;\n            top && this.remove(top);\n            return top;\n        }\n        has(element) {\n            return this[_blockingElements].indexOf(element) !== -1;\n        }\n        /**\n         * Sets `inert` to all document elements except the new top element, its\n         * parents, and its distributed content.\n         */\n        [(_a = _blockingElements, _b = _topElParents, _c = _alreadyInertElements, _topChanged)](newTop) {\n            const toKeepInert = this[_alreadyInertElements];\n            const oldParents = this[_topElParents];\n            // No new top, reset old top if any.\n            if (!newTop) {\n                this[_restoreInertedSiblings](oldParents);\n                toKeepInert.clear();\n                this[_topElParents] = [];\n                return;\n            }\n            const newParents = this[_getParents](newTop);\n            // New top is not contained in the main document!\n            if (newParents[newParents.length - 1].parentNode !== document.body) {\n                throw Error('Non-connected element cannot be a blocking element');\n            }\n            // Cast here because we know we'll call _inertSiblings on newParents\n            // below.\n            this[_topElParents] = newParents;\n            const toSkip = this[_getDistributedChildren](newTop);\n            // No previous top element.\n            if (!oldParents.length) {\n                this[_inertSiblings](newParents, toSkip, toKeepInert);\n                return;\n            }\n            let i = oldParents.length - 1;\n            let j = newParents.length - 1;\n            // Find common parent. Index 0 is the element itself (so stop before it).\n            while (i > 0 && j > 0 && oldParents[i] === newParents[j]) {\n                i--;\n                j--;\n            }\n            // If up the parents tree there are 2 elements that are siblings, swap\n            // the inerted sibling.\n            if (oldParents[i] !== newParents[j]) {\n                this[_swapInertedSibling](oldParents[i], newParents[j]);\n            }\n            // Restore old parents siblings inertness.\n            i > 0 && this[_restoreInertedSiblings](oldParents.slice(0, i));\n            // Make new parents siblings inert.\n            j > 0 && this[_inertSiblings](newParents.slice(0, j), toSkip, null);\n        }\n        /**\n         * Swaps inertness between two sibling elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_swapInertedSibling](oldInert, newInert) {\n            const siblingsToRestore = oldInert[_siblingsToRestore];\n            // oldInert is not contained in siblings to restore, so we have to check\n            // if it's inertable and if already inert.\n            if (this[_isInertable](oldInert) && !oldInert.inert) {\n                oldInert.inert = true;\n                siblingsToRestore.add(oldInert);\n            }\n            // If newInert was already between the siblings to restore, it means it is\n            // inertable and must be restored.\n            if (siblingsToRestore.has(newInert)) {\n                newInert.inert = false;\n                siblingsToRestore.delete(newInert);\n            }\n            newInert[_parentMO] = oldInert[_parentMO];\n            newInert[_siblingsToRestore] = siblingsToRestore;\n            oldInert[_parentMO] = undefined;\n            oldInert[_siblingsToRestore] = undefined;\n        }\n        /**\n         * Restores original inertness to the siblings of the elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_restoreInertedSiblings](elements) {\n            for (const element of elements) {\n                const mo = element[_parentMO];\n                mo.disconnect();\n                element[_parentMO] = undefined;\n                const siblings = element[_siblingsToRestore];\n                for (const sibling of siblings) {\n                    sibling.inert = false;\n                }\n                element[_siblingsToRestore] = undefined;\n            }\n        }\n        /**\n         * Inerts the siblings of the elements except the elements to skip. Stores\n         * the inerted siblings into the element's symbol `_siblingsToRestore`.\n         * Pass `toKeepInert` to collect the already inert elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_inertSiblings](elements, toSkip, toKeepInert) {\n            for (const element of elements) {\n                // Assume element is not a Document, so it must have a parentNode.\n                const parent = element.parentNode;\n                const children = parent.children;\n                const inertedSiblings = new Set();\n                for (let j = 0; j < children.length; j++) {\n                    const sibling = children[j];\n                    // Skip the input element, if not inertable or to be skipped.\n                    if (sibling === element || !this[_isInertable](sibling) ||\n                        (toSkip && toSkip.has(sibling))) {\n                        continue;\n                    }\n                    // Should be collected since already inerted.\n                    if (toKeepInert && sibling.inert) {\n                        toKeepInert.add(sibling);\n                    }\n                    else {\n                        sibling.inert = true;\n                        inertedSiblings.add(sibling);\n                    }\n                }\n                // Store the siblings that were inerted.\n                element[_siblingsToRestore] = inertedSiblings;\n                // Observe only immediate children mutations on the parent.\n                const mo = new MutationObserver(this[_handleMutations].bind(this));\n                element[_parentMO] = mo;\n                let parentToObserve = parent;\n                // If we're using the ShadyDOM polyfill, then our parent could be a\n                // shady root, which is an object that acts like a ShadowRoot, but isn't\n                // actually a node in the real DOM. Observe the real DOM parent instead.\n                const maybeShadyRoot = parentToObserve;\n                if (maybeShadyRoot.__shady && maybeShadyRoot.host) {\n                    parentToObserve = maybeShadyRoot.host;\n                }\n                mo.observe(parentToObserve, {\n                    childList: true,\n                });\n            }\n        }\n        /**\n         * Handles newly added/removed nodes by toggling their inertness.\n         * It also checks if the current top Blocking Element has been removed,\n         * notifying and removing it.\n         */\n        [_handleMutations](mutations) {\n            const parents = this[_topElParents];\n            const toKeepInert = this[_alreadyInertElements];\n            for (const mutation of mutations) {\n                // If the target is a shadowRoot, get its host as we skip shadowRoots when\n                // computing _topElParents.\n                const target = mutation.target.host || mutation.target;\n                const idx = target === document.body ?\n                    parents.length :\n                    parents.indexOf(target);\n                const inertedChild = parents[idx - 1];\n                const inertedSiblings = inertedChild[_siblingsToRestore];\n                // To restore.\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const sibling = mutation.removedNodes[i];\n                    if (sibling === inertedChild) {\n                        console.info('Detected removal of the top Blocking Element.');\n                        this.pop();\n                        return;\n                    }\n                    if (inertedSiblings.has(sibling)) {\n                        sibling.inert = false;\n                        inertedSiblings.delete(sibling);\n                    }\n                }\n                // To inert.\n                for (let i = 0; i < mutation.addedNodes.length; i++) {\n                    const sibling = mutation.addedNodes[i];\n                    if (!this[_isInertable](sibling)) {\n                        continue;\n                    }\n                    if (toKeepInert && sibling.inert) {\n                        toKeepInert.add(sibling);\n                    }\n                    else {\n                        sibling.inert = true;\n                        inertedSiblings.add(sibling);\n                    }\n                }\n            }\n        }\n        /**\n         * Returns if the element is inertable.\n         */\n        [_isInertable](element) {\n            return false === /^(style|template|script)$/.test(element.localName);\n        }\n        /**\n         * Returns the list of newParents of an element, starting from element\n         * (included) up to `document.body` (excluded).\n         */\n        [_getParents](element) {\n            const parents = [];\n            let current = element;\n            // Stop to body.\n            while (current && current !== document.body) {\n                // Skip shadow roots.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    parents.push(current);\n                }\n                // ShadowDom v1\n                if (current.assignedSlot) {\n                    // Collect slots from deepest slot to top.\n                    while (current = current.assignedSlot) {\n                        parents.push(current);\n                    }\n                    // Continue the search on the top slot.\n                    current = parents.pop();\n                    continue;\n                }\n                current = current.parentNode ||\n                    current.host;\n            }\n            return parents;\n        }\n        /**\n         * Returns the distributed children of the element's shadow root.\n         * Returns null if the element doesn't have a shadow root.\n         */\n        [_getDistributedChildren](element) {\n            const shadowRoot = element.shadowRoot;\n            if (!shadowRoot) {\n                return null;\n            }\n            const result = new Set();\n            let i;\n            let j;\n            let nodes;\n            const slots = shadowRoot.querySelectorAll('slot');\n            if (slots.length && slots[0].assignedNodes) {\n                for (i = 0; i < slots.length; i++) {\n                    nodes = slots[i].assignedNodes({\n                        flatten: true,\n                    });\n                    for (j = 0; j < nodes.length; j++) {\n                        if (nodes[j].nodeType === Node.ELEMENT_NODE) {\n                            result.add(nodes[j]);\n                        }\n                    }\n                }\n                // No need to search for <content>.\n            }\n            return result;\n        }\n    }\n    document.$blockingElements =\n        new BlockingElementsImpl();\n})();\n//# sourceMappingURL=blocking-elements.js.map","/**\n * This work is licensed under the W3C Software and Document License\n * (http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document).\n */\n\n// Convenience function for converting NodeLists.\n/** @type {typeof Array.prototype.slice} */\nconst slice = Array.prototype.slice;\n\n/**\n * IE has a non-standard name for \"matches\".\n * @type {typeof Element.prototype.matches}\n */\nconst matches =\n    Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n/** @type {string} */\nconst _focusableElementsString = ['a[href]',\n                                  'area[href]',\n                                  'input:not([disabled])',\n                                  'select:not([disabled])',\n                                  'textarea:not([disabled])',\n                                  'button:not([disabled])',\n                                  'details',\n                                  'summary',\n                                  'iframe',\n                                  'object',\n                                  'embed',\n                                  '[contenteditable]'].join(',');\n\n/**\n * `InertRoot` manages a single inert subtree, i.e. a DOM subtree whose root element has an `inert`\n * attribute.\n *\n * Its main functions are:\n *\n * - to create and maintain a set of managed `InertNode`s, including when mutations occur in the\n *   subtree. The `makeSubtreeUnfocusable()` method handles collecting `InertNode`s via registering\n *   each focusable node in the subtree with the singleton `InertManager` which manages all known\n *   focusable nodes within inert subtrees. `InertManager` ensures that a single `InertNode`\n *   instance exists for each focusable node which has at least one inert root as an ancestor.\n *\n * - to notify all managed `InertNode`s when this subtree stops being inert (i.e. when the `inert`\n *   attribute is removed from the root node). This is handled in the destructor, which calls the\n *   `deregister` method on `InertManager` for each managed inert node.\n */\nclass InertRoot {\n  /**\n   * @param {!Element} rootElement The Element at the root of the inert subtree.\n   * @param {!InertManager} inertManager The global singleton InertManager object.\n   */\n  constructor(rootElement, inertManager) {\n    /** @type {!InertManager} */\n    this._inertManager = inertManager;\n\n    /** @type {!Element} */\n    this._rootElement = rootElement;\n\n    /**\n     * @type {!Set<!InertNode>}\n     * All managed focusable nodes in this InertRoot's subtree.\n     */\n    this._managedNodes = new Set();\n\n    // Make the subtree hidden from assistive technology\n    if (this._rootElement.hasAttribute('aria-hidden')) {\n      /** @type {?string} */\n      this._savedAriaHidden = this._rootElement.getAttribute('aria-hidden');\n    } else {\n      this._savedAriaHidden = null;\n    }\n    this._rootElement.setAttribute('aria-hidden', 'true');\n\n    // Make all focusable elements in the subtree unfocusable and add them to _managedNodes\n    this._makeSubtreeUnfocusable(this._rootElement);\n\n    // Watch for:\n    // - any additions in the subtree: make them unfocusable too\n    // - any removals from the subtree: remove them from this inert root's managed nodes\n    // - attribute changes: if `tabindex` is added, or removed from an intrinsically focusable\n    //   element, make that node a managed node.\n    this._observer = new MutationObserver(this._onMutation.bind(this));\n    this._observer.observe(this._rootElement, {attributes: true, childList: true, subtree: true});\n  }\n\n  /**\n   * Call this whenever this object is about to become obsolete.  This unwinds all of the state\n   * stored in this object and updates the state of all of the managed nodes.\n   */\n  destructor() {\n    this._observer.disconnect();\n\n    if (this._rootElement) {\n      if (this._savedAriaHidden !== null) {\n        this._rootElement.setAttribute('aria-hidden', this._savedAriaHidden);\n      } else {\n        this._rootElement.removeAttribute('aria-hidden');\n      }\n    }\n\n    this._managedNodes.forEach(function(inertNode) {\n      this._unmanageNode(inertNode.node);\n    }, this);\n\n    // Note we cast the nulls to the ANY type here because:\n    // 1) We want the class properties to be declared as non-null, or else we\n    //    need even more casts throughout this code. All bets are off if an\n    //    instance has been destroyed and a method is called.\n    // 2) We don't want to cast \"this\", because we want type-aware optimizations\n    //    to know which properties we're setting.\n    this._observer = /** @type {?} */ (null);\n    this._rootElement = /** @type {?} */ (null);\n    this._managedNodes = /** @type {?} */ (null);\n    this._inertManager = /** @type {?} */ (null);\n  }\n\n  /**\n   * @return {!Set<!InertNode>} A copy of this InertRoot's managed nodes set.\n   */\n  get managedNodes() {\n    return new Set(this._managedNodes);\n  }\n\n  /** @return {boolean} */\n  get hasSavedAriaHidden() {\n    return this._savedAriaHidden !== null;\n  }\n\n  /** @param {?string} ariaHidden */\n  set savedAriaHidden(ariaHidden) {\n    this._savedAriaHidden = ariaHidden;\n  }\n\n  /** @return {?string} */\n  get savedAriaHidden() {\n    return this._savedAriaHidden;\n  }\n\n  /**\n   * @param {!Node} startNode\n   */\n  _makeSubtreeUnfocusable(startNode) {\n    composedTreeWalk(startNode, (node) => this._visitNode(node));\n\n    let activeElement = document.activeElement;\n\n    if (!document.body.contains(startNode)) {\n      // startNode may be in shadow DOM, so find its nearest shadowRoot to get the activeElement.\n      let node = startNode;\n      /** @type {!ShadowRoot|undefined} */\n      let root = undefined;\n      while (node) {\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          root = /** @type {!ShadowRoot} */ (node);\n          break;\n        }\n        node = node.parentNode;\n      }\n      if (root) {\n        activeElement = root.activeElement;\n      }\n    }\n    if (startNode.contains(activeElement)) {\n      activeElement.blur();\n      // In IE11, if an element is already focused, and then set to tabindex=-1\n      // calling blur() will not actually move the focus.\n      // To work around this we call focus() on the body instead.\n      if (activeElement === document.activeElement) {\n        document.body.focus();\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  _visitNode(node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) {\n      return;\n    }\n    const element = /** @type {!Element} */ (node);\n\n    // If a descendant inert root becomes un-inert, its descendants will still be inert because of\n    // this inert root, so all of its managed nodes need to be adopted by this InertRoot.\n    if (element !== this._rootElement && element.hasAttribute('inert')) {\n      this._adoptInertRoot(element);\n    }\n\n    if (matches.call(element, _focusableElementsString) || element.hasAttribute('tabindex')) {\n      this._manageNode(element);\n    }\n  }\n\n  /**\n   * Register the given node with this InertRoot and with InertManager.\n   * @param {!Node} node\n   */\n  _manageNode(node) {\n    const inertNode = this._inertManager.register(node, this);\n    this._managedNodes.add(inertNode);\n  }\n\n  /**\n   * Unregister the given node with this InertRoot and with InertManager.\n   * @param {!Node} node\n   */\n  _unmanageNode(node) {\n    const inertNode = this._inertManager.deregister(node, this);\n    if (inertNode) {\n      this._managedNodes.delete(inertNode);\n    }\n  }\n\n  /**\n   * Unregister the entire subtree starting at `startNode`.\n   * @param {!Node} startNode\n   */\n  _unmanageSubtree(startNode) {\n    composedTreeWalk(startNode, (node) => this._unmanageNode(node));\n  }\n\n  /**\n   * If a descendant node is found with an `inert` attribute, adopt its managed nodes.\n   * @param {!Element} node\n   */\n  _adoptInertRoot(node) {\n    let inertSubroot = this._inertManager.getInertRoot(node);\n\n    // During initialisation this inert root may not have been registered yet,\n    // so register it now if need be.\n    if (!inertSubroot) {\n      this._inertManager.setInert(node, true);\n      inertSubroot = this._inertManager.getInertRoot(node);\n    }\n\n    inertSubroot.managedNodes.forEach(function(savedInertNode) {\n      this._manageNode(savedInertNode.node);\n    }, this);\n  }\n\n  /**\n   * Callback used when mutation observer detects subtree additions, removals, or attribute changes.\n   * @param {!Array<!MutationRecord>} records\n   * @param {!MutationObserver} self\n   */\n  _onMutation(records, self) {\n    records.forEach(function(record) {\n      const target = /** @type {!Element} */ (record.target);\n      if (record.type === 'childList') {\n        // Manage added nodes\n        slice.call(record.addedNodes).forEach(function(node) {\n          this._makeSubtreeUnfocusable(node);\n        }, this);\n\n        // Un-manage removed nodes\n        slice.call(record.removedNodes).forEach(function(node) {\n          this._unmanageSubtree(node);\n        }, this);\n      } else if (record.type === 'attributes') {\n        if (record.attributeName === 'tabindex') {\n          // Re-initialise inert node if tabindex changes\n          this._manageNode(target);\n        } else if (target !== this._rootElement &&\n                   record.attributeName === 'inert' &&\n                   target.hasAttribute('inert')) {\n          // If a new inert root is added, adopt its managed nodes and make sure it knows about the\n          // already managed nodes from this inert subroot.\n          this._adoptInertRoot(target);\n          const inertSubroot = this._inertManager.getInertRoot(target);\n          this._managedNodes.forEach(function(managedNode) {\n            if (target.contains(managedNode.node)) {\n              inertSubroot._manageNode(managedNode.node);\n            }\n          });\n        }\n      }\n    }, this);\n  }\n}\n\n/**\n * `InertNode` initialises and manages a single inert node.\n * A node is inert if it is a descendant of one or more inert root elements.\n *\n * On construction, `InertNode` saves the existing `tabindex` value for the node, if any, and\n * either removes the `tabindex` attribute or sets it to `-1`, depending on whether the element\n * is intrinsically focusable or not.\n *\n * `InertNode` maintains a set of `InertRoot`s which are descendants of this `InertNode`. When an\n * `InertRoot` is destroyed, and calls `InertManager.deregister()`, the `InertManager` notifies the\n * `InertNode` via `removeInertRoot()`, which in turn destroys the `InertNode` if no `InertRoot`s\n * remain in the set. On destruction, `InertNode` reinstates the stored `tabindex` if one exists,\n * or removes the `tabindex` attribute if the element is intrinsically focusable.\n */\nclass InertNode {\n  /**\n   * @param {!Node} node A focusable element to be made inert.\n   * @param {!InertRoot} inertRoot The inert root element associated with this inert node.\n   */\n  constructor(node, inertRoot) {\n    /** @type {!Node} */\n    this._node = node;\n\n    /** @type {boolean} */\n    this._overrodeFocusMethod = false;\n\n    /**\n     * @type {!Set<!InertRoot>} The set of descendant inert roots.\n     *    If and only if this set becomes empty, this node is no longer inert.\n     */\n    this._inertRoots = new Set([inertRoot]);\n\n    /** @type {?number} */\n    this._savedTabIndex = null;\n\n    /** @type {boolean} */\n    this._destroyed = false;\n\n    // Save any prior tabindex info and make this node untabbable\n    this.ensureUntabbable();\n  }\n\n  /**\n   * Call this whenever this object is about to become obsolete.\n   * This makes the managed node focusable again and deletes all of the previously stored state.\n   */\n  destructor() {\n    this._throwIfDestroyed();\n\n    if (this._node && this._node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */ (this._node);\n      if (this._savedTabIndex !== null) {\n        element.setAttribute('tabindex', this._savedTabIndex);\n      } else {\n        element.removeAttribute('tabindex');\n      }\n\n      // Use `delete` to restore native focus method.\n      if (this._overrodeFocusMethod) {\n        delete element.focus;\n      }\n    }\n\n    // See note in InertRoot.destructor for why we cast these nulls to ANY.\n    this._node = /** @type {?} */ (null);\n    this._inertRoots = /** @type {?} */ (null);\n    this._destroyed = true;\n  }\n\n  /**\n   * @type {boolean} Whether this object is obsolete because the managed node is no longer inert.\n   * If the object has been destroyed, any attempt to access it will cause an exception.\n   */\n  get destroyed() {\n    return /** @type {!InertNode} */ (this)._destroyed;\n  }\n\n  /**\n   * Throw if user tries to access destroyed InertNode.\n   */\n  _throwIfDestroyed() {\n    if (this.destroyed) {\n      throw new Error('Trying to access destroyed InertNode');\n    }\n  }\n\n  /** @return {boolean} */\n  get hasSavedTabIndex() {\n    return this._savedTabIndex !== null;\n  }\n\n  /** @return {!Node} */\n  get node() {\n    this._throwIfDestroyed();\n    return this._node;\n  }\n\n  /** @param {?number} tabIndex */\n  set savedTabIndex(tabIndex) {\n    this._throwIfDestroyed();\n    this._savedTabIndex = tabIndex;\n  }\n\n  /** @return {?number} */\n  get savedTabIndex() {\n    this._throwIfDestroyed();\n    return this._savedTabIndex;\n  }\n\n  /** Save the existing tabindex value and make the node untabbable and unfocusable */\n  ensureUntabbable() {\n    if (this.node.nodeType !== Node.ELEMENT_NODE) {\n      return;\n    }\n    const element = /** @type {!Element} */ (this.node);\n    if (matches.call(element, _focusableElementsString)) {\n      if (/** @type {!HTMLElement} */ (element).tabIndex === -1 &&\n          this.hasSavedTabIndex) {\n        return;\n      }\n\n      if (element.hasAttribute('tabindex')) {\n        this._savedTabIndex = /** @type {!HTMLElement} */ (element).tabIndex;\n      }\n      element.setAttribute('tabindex', '-1');\n      if (element.nodeType === Node.ELEMENT_NODE) {\n        element.focus = function() {};\n        this._overrodeFocusMethod = true;\n      }\n    } else if (element.hasAttribute('tabindex')) {\n      this._savedTabIndex = /** @type {!HTMLElement} */ (element).tabIndex;\n      element.removeAttribute('tabindex');\n    }\n  }\n\n  /**\n   * Add another inert root to this inert node's set of managing inert roots.\n   * @param {!InertRoot} inertRoot\n   */\n  addInertRoot(inertRoot) {\n    this._throwIfDestroyed();\n    this._inertRoots.add(inertRoot);\n  }\n\n  /**\n   * Remove the given inert root from this inert node's set of managing inert roots.\n   * If the set of managing inert roots becomes empty, this node is no longer inert,\n   * so the object should be destroyed.\n   * @param {!InertRoot} inertRoot\n   */\n  removeInertRoot(inertRoot) {\n    this._throwIfDestroyed();\n    this._inertRoots.delete(inertRoot);\n    if (this._inertRoots.size === 0) {\n      this.destructor();\n    }\n  }\n}\n\n/**\n * InertManager is a per-document singleton object which manages all inert roots and nodes.\n *\n * When an element becomes an inert root by having an `inert` attribute set and/or its `inert`\n * property set to `true`, the `setInert` method creates an `InertRoot` object for the element.\n * The `InertRoot` in turn registers itself as managing all of the element's focusable descendant\n * nodes via the `register()` method. The `InertManager` ensures that a single `InertNode` instance\n * is created for each such node, via the `_managedNodes` map.\n */\nclass InertManager {\n  /**\n   * @param {!Document} document\n   */\n  constructor(document) {\n    if (!document) {\n      throw new Error('Missing required argument; InertManager needs to wrap a document.');\n    }\n\n    /** @type {!Document} */\n    this._document = document;\n\n    /**\n     * All managed nodes known to this InertManager. In a map to allow looking up by Node.\n     * @type {!Map<!Node, !InertNode>}\n     */\n    this._managedNodes = new Map();\n\n    /**\n     * All inert roots known to this InertManager. In a map to allow looking up by Node.\n     * @type {!Map<!Node, !InertRoot>}\n     */\n    this._inertRoots = new Map();\n\n    /**\n     * Observer for mutations on `document.body`.\n     * @type {!MutationObserver}\n     */\n    this._observer = new MutationObserver(this._watchForInert.bind(this));\n\n    // Add inert style.\n    addInertStyle(document.head || document.body || document.documentElement);\n\n    // Wait for document to be loaded.\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', this._onDocumentLoaded.bind(this));\n    } else {\n      this._onDocumentLoaded();\n    }\n  }\n\n  /**\n   * Set whether the given element should be an inert root or not.\n   * @param {!Element} root\n   * @param {boolean} inert\n   */\n  setInert(root, inert) {\n    if (inert) {\n      if (this._inertRoots.has(root)) { // element is already inert\n        return;\n      }\n\n      const inertRoot = new InertRoot(root, this);\n      root.setAttribute('inert', '');\n      this._inertRoots.set(root, inertRoot);\n      // If not contained in the document, it must be in a shadowRoot.\n      // Ensure inert styles are added there.\n      if (!this._document.body.contains(root)) {\n        let parent = root.parentNode;\n        while (parent) {\n          if (parent.nodeType === 11) {\n            addInertStyle(parent);\n          }\n          parent = parent.parentNode;\n        }\n      }\n    } else {\n      if (!this._inertRoots.has(root)) { // element is already non-inert\n        return;\n      }\n\n      const inertRoot = this._inertRoots.get(root);\n      inertRoot.destructor();\n      this._inertRoots.delete(root);\n      root.removeAttribute('inert');\n    }\n  }\n\n  /**\n   * Get the InertRoot object corresponding to the given inert root element, if any.\n   * @param {!Node} element\n   * @return {!InertRoot|undefined}\n   */\n  getInertRoot(element) {\n    return this._inertRoots.get(element);\n  }\n\n  /**\n   * Register the given InertRoot as managing the given node.\n   * In the case where the node has a previously existing inert root, this inert root will\n   * be added to its set of inert roots.\n   * @param {!Node} node\n   * @param {!InertRoot} inertRoot\n   * @return {!InertNode} inertNode\n   */\n  register(node, inertRoot) {\n    let inertNode = this._managedNodes.get(node);\n    if (inertNode !== undefined) { // node was already in an inert subtree\n      inertNode.addInertRoot(inertRoot);\n    } else {\n      inertNode = new InertNode(node, inertRoot);\n    }\n\n    this._managedNodes.set(node, inertNode);\n\n    return inertNode;\n  }\n\n  /**\n   * De-register the given InertRoot as managing the given inert node.\n   * Removes the inert root from the InertNode's set of managing inert roots, and remove the inert\n   * node from the InertManager's set of managed nodes if it is destroyed.\n   * If the node is not currently managed, this is essentially a no-op.\n   * @param {!Node} node\n   * @param {!InertRoot} inertRoot\n   * @return {?InertNode} The potentially destroyed InertNode associated with this node, if any.\n   */\n  deregister(node, inertRoot) {\n    const inertNode = this._managedNodes.get(node);\n    if (!inertNode) {\n      return null;\n    }\n\n    inertNode.removeInertRoot(inertRoot);\n    if (inertNode.destroyed) {\n      this._managedNodes.delete(node);\n    }\n\n    return inertNode;\n  }\n\n  /**\n   * Callback used when document has finished loading.\n   */\n  _onDocumentLoaded() {\n    // Find all inert roots in document and make them actually inert.\n    const inertElements = slice.call(this._document.querySelectorAll('[inert]'));\n    inertElements.forEach(function(inertElement) {\n      this.setInert(inertElement, true);\n    }, this);\n\n    // Comment this out to use programmatic API only.\n    this._observer.observe(this._document.body || this._document.documentElement, {attributes: true, subtree: true, childList: true});\n  }\n\n  /**\n   * Callback used when mutation observer detects attribute changes.\n   * @param {!Array<!MutationRecord>} records\n   * @param {!MutationObserver} self\n   */\n  _watchForInert(records, self) {\n    const _this = this;\n    records.forEach(function(record) {\n      switch (record.type) {\n      case 'childList':\n        slice.call(record.addedNodes).forEach(function(node) {\n          if (node.nodeType !== Node.ELEMENT_NODE) {\n            return;\n          }\n          const inertElements = slice.call(node.querySelectorAll('[inert]'));\n          if (matches.call(node, '[inert]')) {\n            inertElements.unshift(node);\n          }\n          inertElements.forEach(function(inertElement) {\n            this.setInert(inertElement, true);\n          }, _this);\n        }, _this);\n        break;\n      case 'attributes':\n        if (record.attributeName !== 'inert') {\n          return;\n        }\n        const target = /** @type {!Element} */ (record.target);\n        const inert = target.hasAttribute('inert');\n        _this.setInert(target, inert);\n        break;\n      }\n    }, this);\n  }\n}\n\n/**\n * Recursively walk the composed tree from |node|.\n * @param {!Node} node\n * @param {(function (!Element))=} callback Callback to be called for each element traversed,\n *     before descending into child nodes.\n * @param {?ShadowRoot=} shadowRootAncestor The nearest ShadowRoot ancestor, if any.\n */\nfunction composedTreeWalk(node, callback, shadowRootAncestor) {\n  if (node.nodeType == Node.ELEMENT_NODE) {\n    const element = /** @type {!Element} */ (node);\n    if (callback) {\n      callback(element);\n    }\n\n    // Descend into node:\n    // If it has a ShadowRoot, ignore all child elements - these will be picked\n    // up by the <content> or <shadow> elements. Descend straight into the\n    // ShadowRoot.\n    const shadowRoot = /** @type {!HTMLElement} */ (element).shadowRoot;\n    if (shadowRoot) {\n      composedTreeWalk(shadowRoot, callback, shadowRoot);\n      return;\n    }\n\n    // If it is a <content> element, descend into distributed elements - these\n    // are elements from outside the shadow root which are rendered inside the\n    // shadow DOM.\n    if (element.localName == 'content') {\n      const content = /** @type {!HTMLContentElement} */ (element);\n      // Verifies if ShadowDom v0 is supported.\n      const distributedNodes = content.getDistributedNodes ?\n        content.getDistributedNodes() : [];\n      for (let i = 0; i < distributedNodes.length; i++) {\n        composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n      }\n      return;\n    }\n\n    // If it is a <slot> element, descend into assigned nodes - these\n    // are elements from outside the shadow root which are rendered inside the\n    // shadow DOM.\n    if (element.localName == 'slot') {\n      const slot = /** @type {!HTMLSlotElement} */ (element);\n      // Verify if ShadowDom v1 is supported.\n      const distributedNodes = slot.assignedNodes ?\n        slot.assignedNodes({flatten: true}) : [];\n      for (let i = 0; i < distributedNodes.length; i++) {\n        composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n      }\n      return;\n    }\n  }\n\n  // If it is neither the parent of a ShadowRoot, a <content> element, a <slot>\n  // element, nor a <shadow> element recurse normally.\n  let child = node.firstChild;\n  while (child != null) {\n    composedTreeWalk(child, callback, shadowRootAncestor);\n    child = child.nextSibling;\n  }\n}\n\n/**\n * Adds a style element to the node containing the inert specific styles\n * @param {!Node} node\n */\nfunction addInertStyle(node) {\n  if (node.querySelector('style#inert-style')) {\n    return;\n  }\n  const style = document.createElement('style');\n  style.setAttribute('id', 'inert-style');\n  style.textContent = '\\n'+\n                      '[inert] {\\n' +\n                      '  pointer-events: none;\\n' +\n                      '  cursor: default;\\n' +\n                      '}\\n' +\n                      '\\n' +\n                      '[inert], [inert] * {\\n' +\n                      '  user-select: none;\\n' +\n                      '  -webkit-user-select: none;\\n' +\n                      '  -moz-user-select: none;\\n' +\n                      '  -ms-user-select: none;\\n' +\n                      '}\\n';\n  node.appendChild(style);\n}\n\n/** @type {!InertManager} */\nconst inertManager = new InertManager(document);\n\nif (!Element.prototype.hasOwnProperty('inert')) {\n  Object.defineProperty(Element.prototype, 'inert', {\n    enumerable: true,\n    /** @this {!Element} */\n    get: function() {\n      return this.hasAttribute('inert');\n    },\n    /** @this {!Element} */\n    set: function(inert) {\n      inertManager.setInert(this, inert);\n    },\n  });\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    ANIMATE: 'mdc-drawer--animate',\n    CLOSING: 'mdc-drawer--closing',\n    DISMISSIBLE: 'mdc-drawer--dismissible',\n    MODAL: 'mdc-drawer--modal',\n    OPEN: 'mdc-drawer--open',\n    OPENING: 'mdc-drawer--opening',\n    ROOT: 'mdc-drawer',\n};\nvar strings = {\n    APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',\n    CLOSE_EVENT: 'MDCDrawer:closed',\n    OPEN_EVENT: 'MDCDrawer:opened',\n    SCRIM_SELECTOR: '.mdc-drawer-scrim',\n};\nexport { cssClasses, strings };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from '../constants';\nvar MDCDismissibleDrawerFoundation = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCDismissibleDrawerFoundation, _super);\n    function MDCDismissibleDrawerFoundation(adapter) {\n        var _this = _super.call(this, tslib_1.__assign({}, MDCDismissibleDrawerFoundation.defaultAdapter, adapter)) || this;\n        _this.animationFrame_ = 0;\n        _this.animationTimer_ = 0;\n        return _this;\n    }\n    Object.defineProperty(MDCDismissibleDrawerFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDismissibleDrawerFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDismissibleDrawerFoundation, \"defaultAdapter\", {\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                elementHasClass: function () { return false; },\n                notifyClose: function () { return undefined; },\n                notifyOpen: function () { return undefined; },\n                saveFocus: function () { return undefined; },\n                restoreFocus: function () { return undefined; },\n                focusActiveNavigationItem: function () { return undefined; },\n                trapFocus: function () { return undefined; },\n                releaseFocus: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCDismissibleDrawerFoundation.prototype.destroy = function () {\n        if (this.animationFrame_) {\n            cancelAnimationFrame(this.animationFrame_);\n        }\n        if (this.animationTimer_) {\n            clearTimeout(this.animationTimer_);\n        }\n    };\n    /**\n     * Opens the drawer from the closed state.\n     */\n    MDCDismissibleDrawerFoundation.prototype.open = function () {\n        var _this = this;\n        if (this.isOpen() || this.isOpening() || this.isClosing()) {\n            return;\n        }\n        this.adapter_.addClass(cssClasses.OPEN);\n        this.adapter_.addClass(cssClasses.ANIMATE);\n        // Wait a frame once display is no longer \"none\", to establish basis for animation\n        this.runNextAnimationFrame_(function () {\n            _this.adapter_.addClass(cssClasses.OPENING);\n        });\n        this.adapter_.saveFocus();\n    };\n    /**\n     * Closes the drawer from the open state.\n     */\n    MDCDismissibleDrawerFoundation.prototype.close = function () {\n        if (!this.isOpen() || this.isOpening() || this.isClosing()) {\n            return;\n        }\n        this.adapter_.addClass(cssClasses.CLOSING);\n    };\n    /**\n     * Returns true if the drawer is in the open position.\n     * @return true if drawer is in open state.\n     */\n    MDCDismissibleDrawerFoundation.prototype.isOpen = function () {\n        return this.adapter_.hasClass(cssClasses.OPEN);\n    };\n    /**\n     * Returns true if the drawer is animating open.\n     * @return true if drawer is animating open.\n     */\n    MDCDismissibleDrawerFoundation.prototype.isOpening = function () {\n        return this.adapter_.hasClass(cssClasses.OPENING) || this.adapter_.hasClass(cssClasses.ANIMATE);\n    };\n    /**\n     * Returns true if the drawer is animating closed.\n     * @return true if drawer is animating closed.\n     */\n    MDCDismissibleDrawerFoundation.prototype.isClosing = function () {\n        return this.adapter_.hasClass(cssClasses.CLOSING);\n    };\n    /**\n     * Keydown handler to close drawer when key is escape.\n     */\n    MDCDismissibleDrawerFoundation.prototype.handleKeydown = function (evt) {\n        var keyCode = evt.keyCode, key = evt.key;\n        var isEscape = key === 'Escape' || keyCode === 27;\n        if (isEscape) {\n            this.close();\n        }\n    };\n    /**\n     * Handles the `transitionend` event when the drawer finishes opening/closing.\n     */\n    MDCDismissibleDrawerFoundation.prototype.handleTransitionEnd = function (evt) {\n        var OPENING = cssClasses.OPENING, CLOSING = cssClasses.CLOSING, OPEN = cssClasses.OPEN, ANIMATE = cssClasses.ANIMATE, ROOT = cssClasses.ROOT;\n        // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.\n        var isRootElement = this.isElement_(evt.target) && this.adapter_.elementHasClass(evt.target, ROOT);\n        if (!isRootElement) {\n            return;\n        }\n        if (this.isClosing()) {\n            this.adapter_.removeClass(OPEN);\n            this.closed_();\n            this.adapter_.restoreFocus();\n            this.adapter_.notifyClose();\n        }\n        else {\n            this.adapter_.focusActiveNavigationItem();\n            this.opened_();\n            this.adapter_.notifyOpen();\n        }\n        this.adapter_.removeClass(ANIMATE);\n        this.adapter_.removeClass(OPENING);\n        this.adapter_.removeClass(CLOSING);\n    };\n    /**\n     * Extension point for when drawer finishes open animation.\n     */\n    MDCDismissibleDrawerFoundation.prototype.opened_ = function () { }; // tslint:disable-line:no-empty\n    /**\n     * Extension point for when drawer finishes close animation.\n     */\n    MDCDismissibleDrawerFoundation.prototype.closed_ = function () { }; // tslint:disable-line:no-empty\n    /**\n     * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n     */\n    MDCDismissibleDrawerFoundation.prototype.runNextAnimationFrame_ = function (callback) {\n        var _this = this;\n        cancelAnimationFrame(this.animationFrame_);\n        this.animationFrame_ = requestAnimationFrame(function () {\n            _this.animationFrame_ = 0;\n            clearTimeout(_this.animationTimer_);\n            _this.animationTimer_ = setTimeout(callback, 0);\n        });\n    };\n    MDCDismissibleDrawerFoundation.prototype.isElement_ = function (element) {\n        // In Edge, transitionend on ripple pseudo-elements yields a target without classList.\n        return Boolean(element.classList);\n    };\n    return MDCDismissibleDrawerFoundation;\n}(MDCFoundation));\nexport { MDCDismissibleDrawerFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCDismissibleDrawerFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCFoundation = /** @class */ (function () {\n    function MDCFoundation(adapter) {\n        if (adapter === void 0) { adapter = {}; }\n        this.adapter_ = adapter;\n    }\n    Object.defineProperty(MDCFoundation, \"cssClasses\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports every\n            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"strings\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"numbers\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\n        get: function () {\n            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n            // validation.\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCFoundation.prototype.init = function () {\n        // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    };\n    MDCFoundation.prototype.destroy = function () {\n        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    };\n    return MDCFoundation;\n}());\nexport { MDCFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport * as tslib_1 from \"tslib\";\nimport { MDCDismissibleDrawerFoundation } from '../dismissible/foundation';\n/* istanbul ignore next: subclass is not a branch statement */\nvar MDCModalDrawerFoundation = /** @class */ (function (_super) {\n    tslib_1.__extends(MDCModalDrawerFoundation, _super);\n    function MDCModalDrawerFoundation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Handles click event on scrim.\n     */\n    MDCModalDrawerFoundation.prototype.handleScrimClick = function () {\n        this.close();\n    };\n    /**\n     * Called when drawer finishes open animation.\n     */\n    MDCModalDrawerFoundation.prototype.opened_ = function () {\n        this.adapter_.trapFocus();\n    };\n    /**\n     * Called when drawer finishes close animation.\n     */\n    MDCModalDrawerFoundation.prototype.closed_ = function () {\n        this.adapter_.releaseFocus();\n    };\n    return MDCModalDrawerFoundation;\n}(MDCDismissibleDrawerFoundation));\nexport { MDCModalDrawerFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCModalDrawerFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Return an element assigned to a given slot that matches the given selector\n */\nimport { matches } from '@material/dom/ponyfill';\n/**\n * Determines whether a node is an element.\n *\n * @param node Node to check\n */\nexport const isNodeElement = (node) => {\n    return node.nodeType === Node.ELEMENT_NODE;\n};\nexport function findAssignedElement(slot, selector) {\n    for (const node of slot.assignedNodes({ flatten: true })) {\n        if (isNodeElement(node)) {\n            const el = node;\n            if (matches(el, selector)) {\n                return el;\n            }\n        }\n    }\n    return null;\n}\nexport function addHasRemoveClass(element) {\n    return {\n        addClass: (className) => {\n            element.classList.add(className);\n        },\n        removeClass: (className) => {\n            element.classList.remove(className);\n        },\n        hasClass: (className) => element.classList.contains(className),\n    };\n}\nlet supportsPassive = false;\nconst fn = () => { };\nconst optionsBlock = {\n    get passive() {\n        supportsPassive = true;\n        return false;\n    }\n};\ndocument.addEventListener('x', fn, optionsBlock);\ndocument.removeEventListener('x', fn);\n/**\n * Do event listeners suport the `passive` option?\n */\nexport const supportsPassiveEventListener = supportsPassive;\nexport const deepActiveElementPath = (doc = window.document) => {\n    let activeElement = doc.activeElement;\n    const path = [];\n    if (!activeElement) {\n        return path;\n    }\n    while (activeElement) {\n        path.push(activeElement);\n        if (activeElement.shadowRoot) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        else {\n            break;\n        }\n    }\n    return path;\n};\nexport const doesElementContainFocus = (element) => {\n    const activePath = deepActiveElementPath();\n    if (!activePath.length) {\n        return false;\n    }\n    const deepActiveElement = activePath[activePath.length - 1];\n    const focusEv = new Event('check-if-focused', { bubbles: true, composed: true });\n    let composedPath = [];\n    const listener = (ev) => {\n        composedPath = ev.composedPath();\n    };\n    document.body.addEventListener('check-if-focused', listener);\n    deepActiveElement.dispatchEvent(focusEv);\n    document.body.removeEventListener('check-if-focused', listener);\n    return composedPath.indexOf(element) !== -1;\n};\n//# sourceMappingURL=utils.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { LitElement } from 'lit-element';\nexport { addHasRemoveClass } from './utils.js';\nexport class BaseElement extends LitElement {\n    /**\n     * Create and attach the MDC Foundation to the instance\n     */\n    createFoundation() {\n        if (this.mdcFoundation !== undefined) {\n            this.mdcFoundation.destroy();\n        }\n        if (this.mdcFoundationClass) {\n            this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n            this.mdcFoundation.init();\n        }\n    }\n    firstUpdated() {\n        this.createFoundation();\n    }\n}\n//# sourceMappingURL=base-element.js.map","export const observer = (observer) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(proto, propName) => {\n    // if we haven't wrapped `updated` in this class, do so\n    if (!proto.constructor._observers) {\n        proto.constructor._observers = new Map();\n        const userUpdated = proto.updated;\n        proto.updated = function (changedProperties) {\n            userUpdated.call(this, changedProperties);\n            changedProperties.forEach((v, k) => {\n                const observer = this.constructor._observers.get(k);\n                if (observer !== undefined) {\n                    observer.call(this, this[k], v);\n                }\n            });\n        };\n        // clone any existing observers (superclasses)\n    }\n    else if (!proto.constructor.hasOwnProperty('_observers')) {\n        const observers = proto.constructor._observers;\n        proto.constructor._observers = new Map();\n        observers.forEach(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (v, k) => proto.constructor._observers.set(k, v));\n    }\n    // set this method\n    proto.constructor._observers.set(propName, observer);\n};\n//# sourceMappingURL=observer.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { __decorate } from \"tslib\";\n// Note this blocking-elements import is not redundant with the one below,\n// because we need to ensure we import this module at runtime for its\n// side-effects. See\n// https://github.com/Microsoft/TypeScript/wiki/FAQ#why-are-imports-being-elided-in-my-emit.\nimport 'blocking-elements';\nimport 'wicg-inert';\nimport { strings } from '@material/drawer/constants.js';\nimport MDCDismissibleDrawerFoundation from '@material/drawer/dismissible/foundation.js';\nimport MDCModalDrawerFoundation from '@material/drawer/modal/foundation.js';\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { html, property, query } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map.js';\nconst blockingElements = document.$blockingElements;\nexport class DrawerBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this._previousFocus = null;\n        this.open = false;\n        this.hasHeader = false;\n        this.type = '';\n    }\n    get mdcFoundationClass() {\n        return this.type === 'modal' ? MDCModalDrawerFoundation :\n            MDCDismissibleDrawerFoundation;\n    }\n    createAdapter() {\n        return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), { elementHasClass: (element, className) => element.classList.contains(className), saveFocus: () => {\n                // Note, casting to avoid cumbersome runtime check.\n                this._previousFocus =\n                    this.getRootNode().activeElement;\n            }, restoreFocus: () => {\n                const previousFocus = this._previousFocus && this._previousFocus.focus;\n                if (previousFocus) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    this._previousFocus.focus();\n                }\n            }, notifyClose: () => {\n                this.open = false;\n                this.dispatchEvent(new Event(strings.CLOSE_EVENT, { bubbles: true, cancelable: true }));\n            }, notifyOpen: () => {\n                this.open = true;\n                this.dispatchEvent(new Event(strings.OPEN_EVENT, { bubbles: true, cancelable: true }));\n            }, focusActiveNavigationItem: () => { }, trapFocus: () => {\n                blockingElements.push(this);\n                this.appContent.inert = true;\n            }, releaseFocus: () => {\n                blockingElements.remove(this);\n                this.appContent.inert = false;\n            } });\n    }\n    _handleScrimClick() {\n        if (this.mdcFoundation instanceof MDCModalDrawerFoundation) {\n            this.mdcFoundation.handleScrimClick();\n        }\n    }\n    render() {\n        const dismissible = this.type === 'dismissible' || this.type === 'modal';\n        const modal = this.type === 'modal';\n        const header = this.hasHeader ? html `\n      <div class=\"mdc-drawer__header\">\n        <h3 class=\"mdc-drawer__title\"><slot name=\"title\"></slot></h3>\n        <h6 class=\"mdc-drawer__subtitle\"><slot name=\"subtitle\"></slot></h6>\n        <slot name=\"header\"></slot>\n      </div>\n      ` :\n            '';\n        return html `\n      <aside class=\"mdc-drawer\n          ${classMap({\n            'mdc-drawer--dismissible': dismissible,\n            'mdc-drawer--modal': modal\n        })}\">\n        ${header}\n        <div class=\"mdc-drawer__content\"><slot></slot></div>\n      </aside>\n      ${modal ? html `<div class=\"mdc-drawer-scrim\"\n                          @click=\"${this._handleScrimClick}\"></div>` :\n            ''}\n      <div class=\"mdc-drawer-app-content\">\n        <slot name=\"appContent\"></slot>\n      </div>\n      `;\n    }\n    // note, we avoid calling `super.firstUpdated()` to control when\n    // `createFoundation()` is called.\n    firstUpdated() {\n        this.mdcRoot.addEventListener('keydown', (e) => this.mdcFoundation.handleKeydown(e));\n        this.mdcRoot.addEventListener('transitionend', (e) => this.mdcFoundation.handleTransitionEnd(e));\n    }\n    updated(changedProperties) {\n        if (changedProperties.has('type')) {\n            this.createFoundation();\n        }\n    }\n}\n__decorate([\n    query('.mdc-drawer')\n], DrawerBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('.mdc-drawer-app-content')\n], DrawerBase.prototype, \"appContent\", void 0);\n__decorate([\n    observer(function (value) {\n        if (this.type === '') {\n            return;\n        }\n        if (value) {\n            this.mdcFoundation.open();\n        }\n        else {\n            this.mdcFoundation.close();\n        }\n    }),\n    property({ type: Boolean, reflect: true })\n], DrawerBase.prototype, \"open\", void 0);\n__decorate([\n    property({ type: Boolean })\n], DrawerBase.prototype, \"hasHeader\", void 0);\n__decorate([\n    property({ reflect: true })\n], DrawerBase.prototype, \"type\", void 0);\n//# sourceMappingURL=mwc-drawer-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `.mdc-drawer{border-color:rgba(0,0,0,.12);background-color:#fff;border-radius:0 0 0 0;z-index:6;width:256px;display:flex;flex-direction:column;flex-shrink:0;box-sizing:border-box;height:100%;border-right-width:1px;border-right-style:solid;overflow:hidden;transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.mdc-drawer .mdc-drawer__title{color:rgba(0,0,0,.87)}.mdc-drawer .mdc-list-group__subheader{color:rgba(0,0,0,.6)}.mdc-drawer .mdc-drawer__subtitle{color:rgba(0,0,0,.6)}.mdc-drawer .mdc-list-item__graphic{color:rgba(0,0,0,.6)}.mdc-drawer .mdc-list-item{color:rgba(0,0,0,.87)}.mdc-drawer .mdc-list-item--activated .mdc-list-item__graphic{color:#6200ee}.mdc-drawer .mdc-list-item--activated{color:rgba(98,0,238,.87)}[dir=rtl] .mdc-drawer,.mdc-drawer[dir=rtl]{border-radius:0 0 0 0}.mdc-drawer .mdc-list-item{border-radius:4px}.mdc-drawer.mdc-drawer--open:not(.mdc-drawer--closing)+.mdc-drawer-app-content{margin-left:256px;margin-right:0}[dir=rtl] .mdc-drawer.mdc-drawer--open:not(.mdc-drawer--closing)+.mdc-drawer-app-content,.mdc-drawer.mdc-drawer--open:not(.mdc-drawer--closing)+.mdc-drawer-app-content[dir=rtl]{margin-left:0;margin-right:256px}[dir=rtl] .mdc-drawer,.mdc-drawer[dir=rtl]{border-right-width:0;border-left-width:1px;border-right-style:none;border-left-style:solid}.mdc-drawer .mdc-list-item{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:.875rem;font-size:var(--mdc-typography-subtitle2-font-size, 0.875rem);line-height:1.375rem;line-height:var(--mdc-typography-subtitle2-line-height, 1.375rem);font-weight:500;font-weight:var(--mdc-typography-subtitle2-font-weight, 500);letter-spacing:.0071428571em;letter-spacing:var(--mdc-typography-subtitle2-letter-spacing, 0.0071428571em);text-decoration:inherit;text-decoration:var(--mdc-typography-subtitle2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-subtitle2-text-transform, inherit);height:calc(48px - 2 * 4px);margin:8px 8px;padding:0 8px}.mdc-drawer .mdc-list-item:nth-child(1){margin-top:2px}.mdc-drawer .mdc-list-item:nth-last-child(1){margin-bottom:0}.mdc-drawer .mdc-list-group__subheader{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:.875rem;font-size:var(--mdc-typography-body2-font-size, 0.875rem);line-height:1.25rem;line-height:var(--mdc-typography-body2-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:.0178571429em;letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:inherit;text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body2-text-transform, inherit);display:block;margin-top:0;line-height:normal;margin:0;padding:0 16px}.mdc-drawer .mdc-list-group__subheader::before{display:inline-block;width:0;height:24px;content:\"\";vertical-align:0}.mdc-drawer .mdc-list-divider{margin:3px 0 4px}.mdc-drawer .mdc-list-item__text,.mdc-drawer .mdc-list-item__graphic{pointer-events:none}.mdc-drawer--animate{transform:translateX(-100%)}[dir=rtl] .mdc-drawer--animate,.mdc-drawer--animate[dir=rtl]{transform:translateX(100%)}.mdc-drawer--opening{transform:translateX(0);transition-duration:250ms}[dir=rtl] .mdc-drawer--opening,.mdc-drawer--opening[dir=rtl]{transform:translateX(0)}.mdc-drawer--closing{transform:translateX(-100%);transition-duration:200ms}[dir=rtl] .mdc-drawer--closing,.mdc-drawer--closing[dir=rtl]{transform:translateX(100%)}.mdc-drawer__header{flex-shrink:0;box-sizing:border-box;min-height:64px;padding:0 16px 4px}.mdc-drawer__title{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1.25rem;font-size:var(--mdc-typography-headline6-font-size, 1.25rem);line-height:2rem;line-height:var(--mdc-typography-headline6-line-height, 2rem);font-weight:500;font-weight:var(--mdc-typography-headline6-font-weight, 500);letter-spacing:.0125em;letter-spacing:var(--mdc-typography-headline6-letter-spacing, 0.0125em);text-decoration:inherit;text-decoration:var(--mdc-typography-headline6-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-headline6-text-transform, inherit);display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-drawer__title::before{display:inline-block;width:0;height:36px;content:\"\";vertical-align:0}.mdc-drawer__title::after{display:inline-block;width:0;height:20px;content:\"\";vertical-align:-20px}.mdc-drawer__subtitle{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:.875rem;font-size:var(--mdc-typography-body2-font-size, 0.875rem);line-height:1.25rem;line-height:var(--mdc-typography-body2-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:.0178571429em;letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:inherit;text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body2-text-transform, inherit);display:block;margin-top:0;line-height:normal;margin-bottom:0}.mdc-drawer__subtitle::before{display:inline-block;width:0;height:20px;content:\"\";vertical-align:0}.mdc-drawer__content{height:100%;overflow-y:auto;-webkit-overflow-scrolling:touch}.mdc-drawer--dismissible{left:0;right:initial;display:none;position:absolute}[dir=rtl] .mdc-drawer--dismissible,.mdc-drawer--dismissible[dir=rtl]{left:initial;right:0}.mdc-drawer--dismissible.mdc-drawer--open{display:flex}.mdc-drawer-app-content{margin-left:0;margin-right:0;position:relative}[dir=rtl] .mdc-drawer-app-content,.mdc-drawer-app-content[dir=rtl]{margin-left:0;margin-right:0}.mdc-drawer--modal{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0,0,0,.12);left:0;right:initial;display:none;position:fixed}.mdc-drawer--modal+.mdc-drawer-scrim{background-color:rgba(0,0,0,.32)}[dir=rtl] .mdc-drawer--modal,.mdc-drawer--modal[dir=rtl]{left:initial;right:0}.mdc-drawer--modal.mdc-drawer--open{display:flex}.mdc-drawer-scrim{display:none;position:fixed;top:0;left:0;width:100%;height:100%;z-index:5;transition-property:opacity;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.mdc-drawer--open+.mdc-drawer-scrim{display:block}.mdc-drawer--animate+.mdc-drawer-scrim{opacity:0}.mdc-drawer--opening+.mdc-drawer-scrim{transition-duration:250ms;opacity:1}.mdc-drawer--closing+.mdc-drawer-scrim{transition-duration:200ms;opacity:0}.mdc-drawer-app-content{overflow:auto;flex:1}:host{display:flex;height:100%}`;\n//# sourceMappingURL=mwc-drawer-css.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { customElement } from 'lit-element';\nimport { DrawerBase } from './mwc-drawer-base.js';\nimport { style } from './mwc-drawer-css.js';\nlet Drawer = class Drawer extends DrawerBase {\n};\nDrawer.styles = style;\nDrawer = __decorate([\n    customElement('mwc-drawer')\n], Drawer);\nexport { Drawer };\n//# sourceMappingURL=mwc-drawer.js.map"],"names":["_a","_b","_c","_blockingElements","Symbol","_alreadyInertElements","_topElParents","_siblingsToRestore","_parentMO","_topChanged","_swapInertedSibling","_inertSiblings","_restoreInertedSiblings","_getParents","_getDistributedChildren","_isInertable","_handleMutations","document","$blockingElements","[object Object]","this","Set","top","elems","length","element","remove","push","i","indexOf","splice","newTop","toKeepInert","oldParents","clear","newParents","parentNode","body","Error","toSkip","j","slice","oldInert","newInert","siblingsToRestore","inert","add","has","delete","undefined","elements","disconnect","siblings","sibling","parent","children","inertedSiblings","mo","MutationObserver","bind","parentToObserve","maybeShadyRoot","__shady","host","observe","childList","mutations","parents","mutation","target","idx","inertedChild","removedNodes","console","info","pop","addedNodes","test","localName","current","nodeType","Node","ELEMENT_NODE","assignedSlot","shadowRoot","result","nodes","slots","querySelectorAll","assignedNodes","flatten","Array","prototype","matches","Element","msMatchesSelector","_focusableElementsString","join","InertRoot","rootElement","inertManager","_inertManager","_rootElement","_managedNodes","hasAttribute","_savedAriaHidden","getAttribute","setAttribute","_makeSubtreeUnfocusable","_observer","_onMutation","attributes","subtree","removeAttribute","forEach","inertNode","_unmanageNode","node","managedNodes","hasSavedAriaHidden","savedAriaHidden","ariaHidden","startNode","composedTreeWalk","_visitNode","activeElement","contains","root","DOCUMENT_FRAGMENT_NODE","blur","focus","_adoptInertRoot","call","_manageNode","register","deregister","inertSubroot","getInertRoot","setInert","savedInertNode","records","self","record","type","_unmanageSubtree","attributeName","managedNode","InertNode","inertRoot","_node","_overrodeFocusMethod","_inertRoots","_savedTabIndex","_destroyed","ensureUntabbable","_throwIfDestroyed","destroyed","hasSavedTabIndex","savedTabIndex","tabIndex","size","destructor","callback","shadowRootAncestor","content","distributedNodes","getDistributedNodes","slot","child","firstChild","nextSibling","addInertStyle","querySelector","style","createElement","textContent","appendChild","_document","Map","_watchForInert","head","documentElement","readyState","addEventListener","_onDocumentLoaded","set","get","addInertRoot","removeInertRoot","inertElement","_this","inertElements","unshift","hasOwnProperty","Object","defineProperty","enumerable","cssClasses","ANIMATE","CLOSING","DISMISSIBLE","MODAL","OPEN","OPENING","ROOT","strings","APP_CONTENT_SELECTOR","CLOSE_EVENT","OPEN_EVENT","SCRIM_SELECTOR","MDCDismissibleDrawerFoundation","_super","adapter","tslib_1.__assign","defaultAdapter","animationFrame_","animationTimer_","tslib_1.__extends","configurable","addClass","removeClass","hasClass","elementHasClass","notifyClose","notifyOpen","saveFocus","restoreFocus","focusActiveNavigationItem","trapFocus","releaseFocus","destroy","cancelAnimationFrame","clearTimeout","open","isOpen","isOpening","isClosing","adapter_","runNextAnimationFrame_","close","handleKeydown","evt","keyCode","key","handleTransitionEnd","isElement_","closed_","opened_","requestAnimationFrame","setTimeout","Boolean","classList","MDCFoundation","init","MDCModalDrawerFoundation","apply","arguments","handleScrimClick","fn","optionsBlock","passive","removeEventListener","BaseElement","LitElement","mdcFoundation","mdcFoundationClass","createAdapter","createFoundation","blockingElements","DrawerBase","super","_previousFocus","hasHeader","assign","mdcRoot","className","getRootNode","dispatchEvent","Event","bubbles","cancelable","appContent","dismissible","modal","header","html","classMap","mdc-drawer--dismissible","mdc-drawer--modal","_handleScrimClick","e","changedProperties","__decorate","query","observer","proto","propName","constructor","_observers","observers","v","k","userUpdated","updated","value","property","reflect","css","Drawer","styles","customElement"],"mappings":"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"}